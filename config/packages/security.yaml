security:
    role_hierarchy:
        ROLE_AUTHOR: ROLE_USER
        ROLE_ADMIN: ROLE_AUTHOR

    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        users:
            id: App\Security\JwtUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            entry_point: jwt
            json_login:
                check_path: api_login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            refresh_jwt:
                check_path: api_refresh_token

    access_control:
        - { path: ^/api/v1/admin, roles: ROLE_ADMIN }
        - { path: ^/api/v1/author, roles: ROLE_AUTHOR }
        - { path: ^/api/v1/user, roles: ROLE_USER }
        - { path: ^/api,       roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
